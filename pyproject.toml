[project]
name = "halpid"
version = "3.0.2"
description = "halpid is a power monitor and watchdog daemon for the HALPI2."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "aiohttp>=3.12.4",
    "dateparser>=1.2.1",
    "loguru>=0.7.3",
    "pyyaml>=6.0.2",
    "rich>=14.0.0",
    "smbus2>=0.5.0",
    "typer>=0.16.0",
]
authors = [{ name = "Matti Airas", email = "matti.airas@hatlabs.fi" }]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/halpi"]

[project.scripts]
halpi = "halpi.__main__:cli"
halpid = "halpi.__main__:daemon"

[dependency-groups]
dev = [
    "coverage>=7.8.2",
    "coverage-badge>=1.1.2",
    "mypy>=1.16.0",
    "mypy-extensions>=1.1.0",
    "pydocstyle>=6.3.0",
    "pylint>=3.3.7",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pyupgrade>=3.20.0",
    "ruff>=0.11.12",
    "types-dateparser>=1.2.0.20250516",
    "types-pyyaml>=6.0.12.20250516",
]

[tool.ruff]
line-length = 88
# pyflakes, pycodestyle and isort
lint.select = ["F", "E", "W", "I001"]
target-version = "py312"

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
color_output = true
pretty = true
python_version = "3.12"
show_traceback = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]
